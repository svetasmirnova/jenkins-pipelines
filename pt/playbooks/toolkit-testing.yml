---
# This playbook does following:
#   enables Percona testing repository
#   installs latest version of PS 8.4, PT and PXB 8.4
#   does some tests

# Cosmic is still missing python
# import_playbook: test_prep.yml

- hosts: all
  become: true
  become_method: sudo
  environment:
    PERCONA_TELEMETRY_URL: "https://check-dev.percona.com/v1/telemetry/GenericReport"
  tasks:
    - set_fact:
        percona_version: "{{ lookup('env', 'PERCONA_VERSION', default='8.4') }}"
        PERCONA_TOOLKIT_BRANCH : "{{ lookup('env', 'PERCONA_TOOLKIT_BRANCH') }}"
        TMP_DIR: "{{ lookup('env', 'TMP_DIR') }}"
        LOG_FILE: "{{ lookup('env', 'LOG_FILE') }}"
        MYSQL_BASEDIR: "{{ lookup('env', 'MYSQL_BASEDIR') }}"
        PERCONA_TOOLKIT_SANDBOX_DIR: "{{ lookup('env', 'PERCONA_TOOLKIT_SANDBOX_DIR') }}"
        PERCONA_TOOLKIT_SANDBOX: "{{ lookup('env', 'PERCONA_TOOLKIT_SANDBOX') }}"
        DOWNLOAD_URL: "{{ lookup('env', 'DOWNLOAD_URL') }}"
        PATH: "{{ lookup('env', 'PATH') }}"
        SSL_PATH: "{{ lookup('env', 'SSL_PATH') }}"
        LD_LIBRARY_PATH: "{{ lookup('env', 'LD_LIBRARY_PATH') }}"
        TEST_CMD: "{{ lookup('env', 'TEST_CMD') }}"

    - name: Fix Debian Buster EOL repositories
      shell: sed -i 's|http://deb.debian.org/debian|http://archive.debian.org/debian|g; s|http://cdn-aws.deb.debian.org/debian|http://archive.debian.org/debian|g; s|http://security.debian.org/debian-security|http://archive.debian.org/debian-security|g; /buster-updates/d' /etc/apt/sources.list
      become: yes
      when: ansible_os_family == "Debian" and ansible_distribution_release == "buster"

    - name: Fix Debian Bullseye EOL repositories
      shell: sed -i 's|http://cdn-aws.deb.debian.org/debian|http://archive.debian.org/debian|g; /bullseye-updates/d' /etc/apt/sources.list
      become: yes
      when: ansible_os_family == "Debian" and ansible_distribution_release == "bullseye"

    - name: Update locale
      shell: |
        sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen
        locale-gen
      become: yes

    - name: Download Percona release package
      ansible.builtin.get_url:
        url: https://repo.percona.com/apt/percona-release_latest.generic_all.deb
        dest: /tmp/percona-release_latest.generic_all.deb

    - name: Install required dependencies
      ansible.builtin.apt:
        name:
          - gnupg2
          - lsb-release
        state: present
        update_cache: yes

    - name: Install Percona release package
      ansible.builtin.command:
        cmd: dpkg -i /tmp/percona-release_latest.generic_all.deb
        creates: /etc/apt/sources.list.d/percona-release.list

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Setup Percona pdps-8.0
      ansible.builtin.command: percona-release setup pdps-8.0

    - name: Upgrade Perl package
      ansible.builtin.apt:
        name: perl
        state: latest

    - name: Install required dependencies for tests
      ansible.builtin.apt:
        name:
          - git
          - jq
          - libnuma1
          - strace
          - libncurses6
          - gawk
          - lsof
          - make
          - gcc
          - libssl-dev
          - libcrypt-dev
          - libfile-slurp-perl
          - libjson-perl
          - libnetaddr-ip-perl
          - libtext-diff-perl
          - libio-socket-ssl-perl
          - libipc-run-perl
          - libdbi-perl
          - libdbd-mysql-perl
          - libtest-simple-perl
          - prove6
          - percona-server-server
          - percona-server-client
          - libperconaserverclient21-dev # Debian
        state: present
        update_cache: yes

    - name: Print the variables
      ansible.builtin.debug:
        msg:
          - "PERCONA_TOOLKIT_BRANCH: {{ PERCONA_TOOLKIT_BRANCH }}"
          - "TMP_DIR: {{ TMP_DIR }}"
          - "LOG_FILE: {{ LOG_FILE }}"
          - "MYSQL_BASEDIR: {{ MYSQL_BASEDIR }}"
          - "PERCONA_TOOLKIT_SANDBOX: {{ PERCONA_TOOLKIT_SANDBOX }}"
          - "DOWNLOAD_URL: {{ DOWNLOAD_URL }}"
          - "PATH: {{ PATH }}"
          - "SSL_PATH: {{ SSL_PATH }}"
          - "LD_LIBRARY_PATH: {{ LD_LIBRARY_PATH }}"

    - name: Clone Percona Toolkit repository
      git:
        repo: https://github.com/percona/percona-toolkit.git
        version: "{{ TESTING_BRANCH | default('3.x') }}"
        dest: "{{ PERCONA_TOOLKIT_BRANCH }}"

    - name: Prepare sandbox
      shell: |
        mkdir -p "{{ PERCONA_TOOLKIT_SANDBOX_DIR }}"
        cd "{{ PERCONA_TOOLKIT_SANDBOX_DIR }}"
        curl "{{ DOWNLOAD_URL }}/{{ MYSQL_BASEDIR }}.tar.gz" --output "{{ MYSQL_BASEDIR }}.tar.gz"
        tar -xzf "{{ MYSQL_BASEDIR }}.tar.gz"
      become: yes

    - name: Start sandbox
      shell: |
        cd "{{ PERCONA_TOOLKIT_BRANCH }}"
        ./util/check-dev-env
        ./sandbox/test-env checkconfig
        ./sandbox/test-env stop
        ./sandbox/test-env kill
        ./sandbox/test-env start
      environment:
        PERCONA_TOOLKIT_BRANCH: "{{ PERCONA_TOOLKIT_BRANCH }}"
        PERCONA_TOOLKIT_SANDBOX: "{{ PERCONA_TOOLKIT_SANDBOX }}"
      become: yes

    - name: Run tests
      shell: |
        cd "{{ PERCONA_TOOLKIT_BRANCH }}"
        which prove
        ls -l t/pt-sift
        "{{ TEST_CMD }}"
      environment:
        PERCONA_TOOLKIT_BRANCH: "{{ PERCONA_TOOLKIT_BRANCH }}"
        PERCONA_TOOLKIT_SANDBOX: "{{ PERCONA_TOOLKIT_SANDBOX }}"
      register: run_tests

    - debug: msg="{{ run_tests.stdout }}"

    - debug: msg="{{ run_tests.stderr }}"

    - name: Stop sandbox
      shell: |
        cd {{ PERCONA_TOOLKIT_BRANCH}}
        ./sandbox/test-env stop
      environment:
        PERCONA_TOOLKIT_BRANCH: "{{ PERCONA_TOOLKIT_BRANCH }}"
        PERCONA_TOOLKIT_SANDBOX: "{{ PERCONA_TOOLKIT_SANDBOX }}"
      become: yes